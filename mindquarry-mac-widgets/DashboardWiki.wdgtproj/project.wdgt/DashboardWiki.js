// This file was generated by Dashcode from Apple Computer, Inc.
// You may edit this file to customize your Dashboard widget.

function load()
{
	setupParts();
}

function remove()
{
	// your widget has just been removed from the layer
	// remove any preferences as needed
	// widget.setPreferenceForKey(null, createInstancePreferenceKey("your-key"));
}

function hide()
{
	// your widget has just been hidden stop any timers to
	// prevent cpu usage
}

function show()
{
	// your widget has just been shown.  restart any timers
	// and adjust your interface as needed
}

function showBack(event)
{
	// your widget needs to show the back

	document.getElementById("urlfield").value = url;
	document.getElementById("userfield").value = username;
	document.getElementById("passwordfield").value = password;

	var front = document.getElementById("front");
	var back = document.getElementById("back");

	if (window.widget)
		widget.prepareForTransition("ToBack");

	front.style.display="none";
	back.style.display="block";
	
	if (window.widget)
		setTimeout('widget.performTransition();', 0);
}

function showFront(event)
{
	// your widget needs to show the front
	
	url = document.getElementById("urlfield").value;
	username = document.getElementById("userfield").value;
	password = document.getElementById("passwordfield").value;
	
	widget.setPreferenceForKey(url,"url");
	widget.setPreferenceForKey(username,"username");
	widget.setPreferenceForKey(password,"password");

	var front = document.getElementById("front");
	var back = document.getElementById("back");

	if (window.widget)
		widget.prepareForTransition("ToFront");

	front.style.display="block";
	back.style.display="none";
	
	if (window.widget)
		setTimeout('widget.performTransition();', 0);
}

if (window.widget)
{
	widget.onremove = remove;
	widget.onhide = hide;
	widget.onshow = show;
}


function focusText(event) 
{
	text = document.getElementById("bodyText");
	text.focus();
}


function editThis(event) 
{
	document.getElementById("viewBox").style.display = "none";
	document.getElementById("editBox").style.display = "block";
	document.getElementById("titleText").contentEditable = true;
	document.getElementById("bodyText").contentEditable = true;
}


function showThis(event) 
{
	document.getElementById("viewBox").style.display = "block";
	document.getElementById("editBox").style.display = "none";
	document.getElementById("titleText").contentEditable = false;
	document.getElementById("bodyText").contentEditable = false;
	load(lastpage)
}


function saveThis(event) 
{
	var doc = document.implementation.createDocument("", "", null);
	var wiki = doc.createElement("wiki");
	doc.documentElement = wiki;
	var title = doc.createElement("title");
	title.appendChild(doc.createTextNode(document.getElementById("titleText").innerHTML));
	wiki.appendChild(title);
	var content = doc.createElement("content");
	wiki.appendChild(content);
	//for some reason we have to escape the xml in the text node.
	content.appendChild(doc.createTextNode(document.getElementById("bodyText").innerHTML.replace(/&/g,'&amp;').replace(/</g,"&lt;").replace(/>/g,'&gt;')));
	
	var serializer = new XMLSerializer();
    var text = serializer.serializeToString(wiki);
	alert(text);
	
	var req = new XMLHttpRequest();
	//req.setRequestHeader("Content-Type","text/xml");
	req.overrideMimeType('text/xml');
	//Safari's XMLhttpRequest does not support PUT, so we are disguising a POST as PUT. 
	req.open("POST",url+lastpage+"?http-accept-header=text/xml&http-PUT-method=PUT", true, username, password);
	req.send("wiki-content=" + escape(text));
	alert(req.status);
	showThis(event);
}


function loadStart(event) 
{
	alert("Loading Start");
	load("Start");
}

var lastpage;
var url = widget.getPreferenceForKey("url");
var username = widget.getPreferenceForKey("username");
var password = widget.getPreferenceForKey("password");

function load(page)
{
	if (!page)
		return;
	if (!url)
			return;
	alert("loading " + page);
	var req = new XMLHttpRequest();
	req.setRequestHeader('If-Modified-Since', 'Wed, 15 Nov 1995 00:00:00 GMT');
	
	req.onreadystatechange = function() {
		alert("Something happened");
		if (req.readyState == 4) {
			alert("Something good happened");
			if (req.status==200) {
				alert("got a response");
				var title = document.getElementById("titleText");
				var body = document.getElementById("bodyText");
				body.onclick = editThis;
				
				// only if "OK"
				var xml = req.responseXML;
				title.innerHTML = xml.getElementsByTagName("title")[0].firstChild.nodeValue;
				body.innerHTML = xml.getElementsByTagName("content")[0].firstChild.nodeValue;
				alert("replaced content");
				lastpage = page;
				body.onclick = function(event) {
					if (event.target==body) {
						return;
					} else if (event.target.nodeType==1&&event.target.nodeName=="A") {
						//this is a link.
						event.preventDefault();
						var a = event.target;
						var href = event.target.getAttribute("href");
						if (href.match("^\\w+$")) {
							alert("Good Link");
							load(href);
						} else {
							alert("Other Link" + href);
							widget.openURL(a.href);
						}
						
					} else {
						event.target = event.target.parentNode;
					}
				}
			} else {
				alert(req.status);
			} 
		}
	}
	alert("opening " + page);
	req.open("GET",url+page+"?http-accept-header=text/xml", true, username, password);
	req.send(null);
}

loadStart();

function makeLink(event) 
{	
	//TODO: wait for a new webkit version that support execCommand(createLink)
	//document.execCommand("cut");
	//copy("Link This");
	document.execCommand("createLink");
}

function copy(text2copy) {
    var flashcopier = "flashcopier";
    
	if(!document.getElementById(flashcopier)) {
      var divholder = document.createElement('div');
      divholder.id = flashcopier;
      document.body.appendChild(divholder);
    }
	
    document.getElementById(flashcopier).innerHTML = '';
    var divinfo = '<embed src="_clipboard.swf" FlashVars="clipboard='+escape(text2copy)+'" width="0" height="0" type="application/x-shockwave-flash"></embed>';
    document.getElementById(flashcopier).innerHTML = divinfo;
	
}


function editNew(event) 
{
	load("new");
	editThis(event);
}
